"""Initial migration.

Revision ID: 2e8b862c11d6
Revises: 
Create Date: 2025-10-31 19:48:09.515496

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2e8b862c11d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=160), nullable=False),
    sa.Column('full_name', sa.String(length=160), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('1'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("email <> ''", name='ck_admin_email_not_empty'),
    sa.CheckConstraint("full_name <> ''", name='ck_admin_full_name_not_empty'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_admin_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_admin_full_name'), ['full_name'], unique=False)

    op.create_table('delivery_modes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('event_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instructors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=160), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('instructors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instructors_full_name'), ['full_name'], unique=False)

    op.create_table('registration_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=160), nullable=False),
    sa.Column('email', sa.String(length=160), nullable=False),
    sa.Column('phone', sa.String(length=40), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("full_name <> ''", name='ck_user_full_name_not_empty'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_full_name'), ['full_name'], unique=False)

    op.create_table('venues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('map_url', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('room_capacity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('room_capacity IS NULL OR room_capacity > 0', name='ck_venue_room_capacity_pos'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('venues', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_venues_name'), ['name'], unique=False)

    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=160), nullable=False),
    sa.Column('title', sa.String(length=160), nullable=False),
    sa.Column('summary', sa.String(length=300), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default='draft', nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("content <> ''", name='ck_blog_content_not_empty'),
    sa.CheckConstraint("title <> ''", name='ck_blog_title_not_empty'),
    sa.ForeignKeyConstraint(['author_id'], ['admin.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug', name='uq_blog_slug')
    )
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blog_posts_author_id'), ['author_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_blog_posts_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_blog_posts_title'), ['title'], unique=False)
        batch_op.create_index('ix_blog_status_published_at', ['status', 'published_at'], unique=False)

    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('delivery_mode_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('session_counts', sa.Integer(), nullable=True),
    sa.Column('session_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('(start_date IS NULL OR end_date IS NULL) OR (start_date <= end_date)', name='ck_course_date_range'),
    sa.CheckConstraint('capacity IS NULL OR capacity > 0', name='ck_course_capacity_pos'),
    sa.CheckConstraint('session_counts IS NULL OR session_counts >= 0', name='ck_course_session_counts_nonneg'),
    sa.CheckConstraint('session_duration_minutes IS NULL OR session_duration_minutes > 0', name='ck_course_session_duration_pos'),
    sa.ForeignKeyConstraint(['delivery_mode_id'], ['delivery_modes.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_courses_delivery_mode_id'), ['delivery_mode_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_courses_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_courses_venue_id'), ['venue_id'], unique=False)

    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type_id', sa.Integer(), nullable=False),
    sa.Column('delivery_mode_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('(starts_at IS NULL OR ends_at IS NULL) OR (ends_at > starts_at)', name='ck_event_timespan'),
    sa.CheckConstraint('capacity IS NULL OR capacity > 0', name='ck_event_capacity_pos'),
    sa.ForeignKeyConstraint(['delivery_mode_id'], ['delivery_modes.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_delivery_mode_id'), ['delivery_mode_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_event_type_id'), ['event_type_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_venue_id'), ['venue_id'], unique=False)

    op.create_table('course_instructors',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id', 'instructor_id')
    )
    with op.batch_alter_table('course_instructors', schema=None) as batch_op:
        batch_op.create_index('ix_course_instructor_course', ['course_id'], unique=False)
        batch_op.create_index('ix_course_instructor_instructor', ['instructor_id'], unique=False)

    op.create_table('registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['registration_statuses.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'user_id', name='uq_registration_course_user')
    )
    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_registrations_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registrations_status_id'), ['status_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registrations_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registrations_user_id'))
        batch_op.drop_index(batch_op.f('ix_registrations_status_id'))
        batch_op.drop_index(batch_op.f('ix_registrations_course_id'))

    op.drop_table('registrations')
    with op.batch_alter_table('course_instructors', schema=None) as batch_op:
        batch_op.drop_index('ix_course_instructor_instructor')
        batch_op.drop_index('ix_course_instructor_course')

    op.drop_table('course_instructors')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_venue_id'))
        batch_op.drop_index(batch_op.f('ix_events_title'))
        batch_op.drop_index(batch_op.f('ix_events_event_type_id'))
        batch_op.drop_index(batch_op.f('ix_events_delivery_mode_id'))

    op.drop_table('events')
    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_courses_venue_id'))
        batch_op.drop_index(batch_op.f('ix_courses_title'))
        batch_op.drop_index(batch_op.f('ix_courses_delivery_mode_id'))

    op.drop_table('courses')
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.drop_index('ix_blog_status_published_at')
        batch_op.drop_index(batch_op.f('ix_blog_posts_title'))
        batch_op.drop_index(batch_op.f('ix_blog_posts_slug'))
        batch_op.drop_index(batch_op.f('ix_blog_posts_author_id'))

    op.drop_table('blog_posts')
    with op.batch_alter_table('venues', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_venues_name'))

    op.drop_table('venues')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_full_name'))

    op.drop_table('users')
    op.drop_table('registration_statuses')
    with op.batch_alter_table('instructors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instructors_full_name'))

    op.drop_table('instructors')
    op.drop_table('event_types')
    op.drop_table('delivery_modes')
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_admin_full_name'))
        batch_op.drop_index(batch_op.f('ix_admin_email'))

    op.drop_table('admin')
    # ### end Alembic commands ###
